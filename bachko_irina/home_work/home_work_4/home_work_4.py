# Задача 1:
#
# Вывод чисел от 1 до N
# Условие:
# Напишите программу, которая выводит все числа от 1 до N (включительно), где N вводит пользователь
#
# Пример ввода:
# 5
# Пример вывода:
# 1 2 3 4 5
# Комбинации:
#
# Можно добавить проверку, что N > 0

n = int(input("Введите число: "))
if n > 0:
    for i in range(1, n + 1):
        print (i, end = ' ')
else:
    print('Введи число больше нуля ')

# Можно выводить числа в обратном порядке (range(n, 0, -1))

n = int(input("Введи число: "))
if n > 0:
    for i in range(n, 0, -1):
         print(i , end=' ')
else:
    print('Введи число больше нуля ')


# Задача 2:

# Сумма элементов списка
# Условие:
# Дан список чисел. Найти сумму всех элементов
#
# Пример ввода:
# [2, 4, 6, 8]
# Пример вывода:
# 20
# Комбинации:
#
# Можно вводить список с клавиатуры (numbers = list(map(int, input().split())))
# Можно искать сумму только чётных чисел (if num % 2 == 0)

numbers = list(map(int, input("Введите список чисел, используя пробел: ").split()))
sum = 0
for number in numbers:
    sum += number
print(f'Сумма: {sum}')

# Можно искать сумму только чётных чисел (if num % 2 == 0)

numbers = list(map(int, input("Введите список чисел, используя пробел: ").split()))
sum = 0
for num in numbers:
    if num % 2 == 0:
        sum += num
print(f'Сумма четных чисел: {sum}')


# Задача 3:

# Подсчёт букв в строке
# Условие:
# Дана строка. Посчитайте, сколько раз в ней встречается буква "a" (регистр не учитывать)
#
# Пример ввода:
#
# "Abracadabra"
# Пример вывода:
#
# 5
# Комбинации:
#
# Можно считать любую букву (запросить у пользователя)
# Можно вывести процентное соотношение букв


s = str(input('Введи слово: ')).lower()
count = 0
for letter in s:
    if letter == 'a':
        count += 1
print(count)


# Задача 4:

# Поиск минимального числа в списке
# Условие:
# Дан список чисел. Найти минимальное число
#
# Пример ввода:
#
# [5, 3, 8, 1, 9]
# Пример вывода:
#
# 1
# Комбинации:
#
# Можно искать максимум (if num > max_num)
# Можно вывести индекс минимального элемента (enumerate)




# Задача 5: Вывод таблицы умножения
# Условие:
# Вывести таблицу умножения для числа N (от 1 до 10)
#
# Пример ввода:
#
# 3
# Пример вывода:
#
# 3 * 1 = 3
# 3 * 2 = 6
# ...
# 3 * 10 = 30
# Комбинации:
#
# Можно сделать вложенный цикл для всей таблицы умножения
# Можно добавить форматирование (print(f"{n:2} * {i:2} = {n*i:3}"))

x = int(input('Введи число от 1 до 10: '))
for i in range(1, 11):
    result = x * i
    print(f'{x} x {i} = {result}')


# 5 задач для цикла while

# Задача 1:

# Угадай число
# Условие:
# Программа загадывает число от 1 до 10. Пользователь угадывает, пока не введёт правильное число
#
# Пример работы:
#
# Угадай число (1-10): 3
# Нет! Попробуй ещё: 5
# Нет! Попробуй ещё: 7
# Угадал!
# Комбинации:
#
# Можно добавить счётчик попыток
# Можно давать подсказки (больше/меньше)

i = 0
number = 3
while i != number:
    i = int(input('Угадай число от 1 до 10: '))
    print('Нет! Попробуй ещё: ')
print('Угадал! ')


# Задача 2: Сумма чисел до 0
# Условие:
# Пользователь вводит числа, пока не введёт 0. Посчитать сумму всех введённых чисел
#
# Пример ввода:
#
# 3
# 5
# 2
# 0
# Пример вывода:
#
# 10
# Комбинации:
#
# Можно считать количество чисел (count += 1)
# Можно искать среднее арифметическое

total = 0
number = int(input('Введите число (0 для выхода): '))
while number != 0:
    total += number
    number = int(input('Введите число (0 для выхода): '))
print(f'Сумма : {total}')


# Задача 3: Проверка пароля
# Условие:
# Пользователь вводит пароль, пока не введёт правильный (qwerty123)
#
# Пример работы:
#
# Введите пароль: 123
# Неверно! Попробуй ещё: qwerty123
# Доступ разрешён!
# Комбинации:
#
# Можно ограничить число попыток (attempts += 1)
# Можно скрывать ввод (getpass.getpass())


password = 'qwerty123'
count = 2

print(f'Осталось попыток: {count + 1}')
ipassword = input('Введите пароль: ')

while count > 0:
    if ipassword == password:
        print('Доступ разрешён! ')
        break
    else:
        count -= 1
        print(f'Неверно! Осталось попыток: {count + 1}')
        ipassword = input('Введите пароль: ')

        if count == 0:
            print('Закончились попытки! ')


# Задача 4: Обратный отсчёт
# Условие:
# Вывести числа от N до 1 с задержкой в 1 секунду
#
# Пример ввода:
#
# 3
# Пример вывода:
#
# 3
# 2
# 1
# Старт!
# Комбинации:
#
# Можно добавить звук (winsound.Beep)
# Можно сделать таймер с минутами и секундами

import time
import winsound
countdown = int(input("Введите начальное значение для обратного отсчета: "))

while countdown > 0:
    print(countdown)
    time.sleep(1)
    countdown -= 1

print("Старт!")
winsound.Beep(2000,1000)


# Задача 5: Калькулятор до выхода
# Условие:
# Программа принимает числа и операцию (+, -, *, /), пока пользователь не введёт exit
#
# Пример работы:
#
# Введите операцию (+, -, *, /, exit): +
# Введите число: 5
# Введите число: 3
# Результат: 8
# Введите операцию: exit
# Завершение
# Комбинации:
#
# Можно добавить возведение в степень
# Можно сохранять историю операций


